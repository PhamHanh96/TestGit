
			System.out.println("Client open... ");
			client = new DatagramSocket();
			Scanner sc = new Scanner(System.in);
			String id, password, data;
			int luong;
			System.out.print("M?i b?n nh?p luong: ");
			luong = sc.nextInt();
			
			
			// send
			data = String.valueOf(luong);
			sendPacketToServer(data);
			
			 DatagramPacket packet = receiveData(client);
                         data = new String(packet.getData()).trim();
                         
			  System.out.println(data);
			sc.close();
			client.close();
			System.out.println("Client close...");
			//System.exit(1);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private static int recieveResultFromServer() throws IOException {
		byte m[] = new byte[256];
		DatagramPacket packet = new DatagramPacket(m, m.length);
		client.receive(packet);
		String str = new String(packet.getData()).trim();
		int i = Integer.parseInt(str);
		return i;
	}

	private static void sendPacketToServer(String data) throws IOException {
		byte m[] = data.getBytes();
		InetAddress serverAddress = InetAddress.getByName("localhost");
		DatagramPacket packet = new DatagramPacket(m, m.length, serverAddress, 1234);
		client.send(packet);
	}
         public static DatagramPacket receiveData(DatagramSocket socket) throws IOException {
        byte[] dataByte = new byte[256];
        DatagramPacket packet = new DatagramPacket(dataByte, dataByte.length);
        socket.receive(packet);
        return packet;
    }
}
